version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: /home/app/backend/entrypoint.prod.sh
    volumes:
      - static_volume:/home/app/backend/static
      - media_volume:/home/app/backend/media
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod

  redis:
    image: redis:latest

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: celery_worker
    command: sh -c "chmod +x /home/app/worker.sh && sudo /home/app/backend/worker.sh"
    volumes:
      - .:/home/app/backend
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: celery_beat
    command: sh -c "chmod +x /home/app/beat.sh && sudo /home/app/backend/beat.sh"
    volumes:
      - .:/home/app/backend
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: celery_flower
    command: sh -c "chmod +x /home/app/flower.sh && sudo /home/app/backend/flower.sh"
    volumes:
      - .:/home/app/backend
    env_file:
      - ./.env.prod
    ports:
      - '5557:5555'
    depends_on:
      - redis
      - db

  nginx:
    build: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - static_volume:/home/app/backend/static
      - media_volume:/home/app/backend/media
    depends_on:
      - backend
      - flower

volumes:
  postgres_data:
  static_volume:
  media_volume: